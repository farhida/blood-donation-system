# Generated by Django 4.2.23 on 2025-08-22 07:23

from django.db import migrations


def add_columns_if_missing(apps, schema_editor):
    """Add donated_recently and not_ready columns only if they don't exist.

    This function is written to work against Postgres and SQLite. For Postgres
    it uses `ALTER TABLE ... ADD COLUMN IF NOT EXISTS ...`. For SQLite it
    inspects `PRAGMA table_info` and only runs `ALTER TABLE ... ADD COLUMN` if
    the column is missing.
    """
    conn = schema_editor.connection
    vendor = getattr(conn, 'vendor', '')
    cursor = conn.cursor()

    if vendor == 'postgresql':
        # Postgres supports IF NOT EXISTS syntax
        cursor.execute(
            "ALTER TABLE IF EXISTS donors_userprofile ADD COLUMN IF NOT EXISTS donated_recently boolean NOT NULL DEFAULT false;"
        )
        cursor.execute(
            "ALTER TABLE IF EXISTS donors_userprofile ADD COLUMN IF NOT EXISTS not_ready boolean NOT NULL DEFAULT false;"
        )
    else:
        # SQLite and others: check existing columns then add if missing
        try:
            cursor.execute("PRAGMA table_info('donors_userprofile')")
            existing = [row[1] for row in cursor.fetchall()]
        except Exception:
            existing = []

        if 'donated_recently' not in existing:
            # SQLite uses 0/1 for boolean default; use 0 for False
            cursor.execute(
                "ALTER TABLE donors_userprofile ADD COLUMN donated_recently boolean NOT NULL DEFAULT 0"
            )
        if 'not_ready' not in existing:
            cursor.execute(
                "ALTER TABLE donors_userprofile ADD COLUMN not_ready boolean NOT NULL DEFAULT 0"
            )


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_rebuild_core"),
    ]

    operations = [
        migrations.RunPython(add_columns_if_missing, reverse_code=migrations.RunPython.noop),
    ]
